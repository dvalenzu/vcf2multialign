# Copyright (c) 2017 Tuukka Norri
# This code is licensed under MIT license (see LICENSE for details).

package		"vcf2multialign"
purpose		"Create multiply-aligned haplotype sequences from a variant call file and a reference sequence."
usage		"vcf2multialign --reference=filename.fa --variants=filename.vcf [...]"
description
"The sequences will be written into text files created in the current working directory. The files will be named “sample_id-chr_idx” as listed in the variant file. Dashes “-” will be output when needed to make the sequences aligned.

To output more sequences in one pass, please adjust the maximum number of open files per process with “ulimit -n” and increase the chunk size.

Instead of writing each complete haplotype sequence, the samples may also be reduced. This is done by applying a heuristic that attempts to place the variants into a number of generated, multiply-aligned sequences such that reading an original sequence from the generated ones requires as few switches from one generated sequence to another as possible."

#Instead of writing each complete haplotype sequence, the samples may also be reduced such that as many variants as possible are packed into a single sequence. The number of generated sequences depends on the amount of padding requested around each variant. For example, consider two variants a and b that are within padding distance of each other. If two individuals A and B both have variant b but only A has variant a, two sequenes will be generated, one with both variants and one with only variant b. If a and b are not within padding distance of each other, only one sequence with both variants will be generated.
#
#Since the generated sequences are not written to disk, sample reduction can require a lot of memory."

section "Input and output options"
option	"reference"				r	"Reference FASTA file path"													string	typestr = "filename"														required
option	"variants"				a	"Variant call file path"													string	typestr = "filename"														required
option	"output-reference"		-	"Output multiply-aligned reference"											string	typestr = "filename"														optional
option	"overwrite"				-	"Overwrite output files"													flag	off
option	"chunk-size"			-	"Number of samples to be processed in one pass"								long	typestr = "size" default = "500"											optional
option	"report-file"			-	"Write skipped variants to the given file"									string	typestr = "filename"														optional
option	"print-invocation"		-	"Output the invocation"														flag	off

section "Input processing"
option	"null-allele-seq"		-	"Sequence to be used for null alleles"										string	typestr = "seq"	default = "N"												optional
option	"no-check-ref"			-	"Omit comparing the reference to the REF column"							flag	off
option	"structural-variants"	-	"Structural variant handling"														typestr = "mode"	values = "discard", "keep" default = "discard"	enum	optional

#section "Sample reduction"
#option	"reduce-samples"		-	"Reduce the number of samples to a minimum as described above"				flag	off
#option	"variant-padding"		-	"Padding radius for each variant"											int		typestr = "radius"	default = "0"	dependon = "reduce-samples"			optional
#option	"allow-switch-to-ref"	-	"Construct the sequences so that reference padding around each subsequence is removed"	flag	off	dependon = "reduce-samples"

section "Sample reduction"
option	"reduce-samples"		-	"Reduce the number of samples as described above"							flag	off
option	"min-path-length"		-	"Minimum path length in a subgraph. Specify 0 for n^(1/2)"					int		default = "0"	dependon = "reduce-samples"									optional
